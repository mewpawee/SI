apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: scan-
spec:
  entrypoint: scan-service
  imagePullSecrets:
    - name: registry-sec
  arguments:
    parameters:
    - name: target-domain
      value: ''
  serviceAccountName: argo
  templates:
  - name: scan-service
    dag:
      tasks:
      - name: scan-dnsmap
        template: dnsmap
        arguments:
          parameters:
          - name: target-domain
            value: "{{item}}" 
        withParam: "{{workflow.parameters.target-domain}}"
      - name: test
        dependencies: [scan-dnsmap]
        template: echo
        arguments:
          artifacts:
          - name: output
            from: "{{workflow.outputs.artifacts.my-global-art}}"
  #Services   
  - name: echo
    inputs:
      artifacts:
      - name: output
        path: /tmp/output
    container:
      image: alpine:3.7
      command: [sh, -c]
      args: ["cat /tmp/output"]

  - name: dnsmap
    inputs:
      parameters:
      - name: target-domain
    container:
      image: registry.digitalocean.com/sec/dnsmap:v1
      command: [./dnsmap, "{{inputs.parameters.target-domain}}", -r, "./tmp/output-dnsmap-{{inputs.parameters.target-domain}}.txt"]
    outputs:
      artifacts:
        - name: message
          path: "/tmp/"
          globalName: my-global-art
          archive:
            none: {}
            
          s3:
            endpoint: fra1.digitaloceanspaces.com
            bucket: testv1
            key: artifacts/
            accessKeySecret:
              name: artifact-key
              key: accessKey
            secretKeySecret:
              name: artifact-key
              key: secretKey
