apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: scan-endpoint
  namespace: argo
spec:
  serviceAccountName: default
  artifactRepositoryRef:
    configMap: artifact-repositories
    key: default
  entrypoint: scan-endpoint
  arguments:
    parameters:
      - name: endpoint
        value: "google.com"
      - name: company
        value: ""
  templates:
    - name: scan-endpoint
      inputs:
        parameters:
          - name: endpoint
      dag: # You should only reference external "templates" in a "steps" or "dag" "template".
        tasks:
          #add scan on database
          - name: scan-addscan
            template: add-scan
          #dnsmap
          - name: scan-dnsmap
            templateRef:
              name: dnsmap
              template: dnsmap
            arguments:
              parameters:
                - name: endpoint
                  value: "{{inputs.parameters.endpoint}}"
                - name: company
                  value: "{{workflow.parameters.company}}"
          #nmap
          - name: scan-nmap
            depends: "scan-dnsmap.Succeeded||scan-dnsmap.Skipped"
            templateRef:
              name: nmap
              template: nmap
            arguments:
              parameters:
                - name: company
                  value: "{{workflow.parameters.company}}"
                - name: endpoint
                  value: "{{inputs.parameters.endpoint}}"
              artifacts:
                - name: dnsmap
                  raw:
                    data: |
                      {{tasks.scan-dnsmap.outputs.parameters.d2n}}
          #Filter data and upload
          - name: scan-filter-upload
            depends: "scan-nmap.Succeeded"
            templateRef:
              name: filter-upload
              template: filter-upload
            arguments:
              parameters:
                - name: company
                  value: "{{workflow.parameters.company}}"
                - name: workflowName
                  value: "{{workflow.name}}"
                - name: endpoint
                  value: "{{inputs.parameters.endpoint}}"
          - name: scan-finished
            depends: "scan-filter-upload.Succeeded"
            template: finish-scan

    - name: add-scan
      script:
        image: curlimages/curl:7.76.1
        command: [sh]
        source: |
          curl --location --request POST 'https://csi.cmkl.ac.th/api/addScan' \
          --header 'Content-Type: application/json' \
          --data-raw '{
          "company": "{{workflow.parameters.company}}",
          "scanid": "{{workflow.name}}"
          }'

    - name: finish-scan
      script:
        image: curlimages/curl:7.76.1
        command: [sh]
        source: |
          curl --location --request PATCH 'https://csi.cmkl.ac.th/api/updateScan/{{workflow.name}}' \
          --header 'Content-Type: application/json' \
          --data-raw '{
          "status": "success"
          }'
